#
#  Copyright 2020 Wabi.  All rights reserved.
#
#  CONFIDENTIAL AND COPYRIGHT - FOR WABI INTERNAL USE ONLY - UNAUTHORIZED ACCESS IS STRICTLY
#  PROHIBITED. THIS SOURCE CODE IS PROPRIETARY AND CONFIDENTIAL AND THEREFORE SUBJECT TO THE
#  CONSTITUTIONAL LAWS AND RIGHTS GOVERNING THE UNITED STATES OF AMERICA. ALL RIGHTS, VIEWERSHIP,
#  DISTRIBUTION, POSESSION, AND CONTROL OF THIS SOURCE CODE BELONG SOLEY TO THE COMPANY "WABIXYZ
#  INC."
#
#  IF YOU CAN READ THIS TEXT, THEN YOU ARE IN STRICT VIOLATION OF THE WABI SOFTWARE LICENSE
#  AGREEMENT WHICH IS INCLUDED WITHIN THIS SOFTWARE DISTRIBUTION.
#

# <pep8 compliant>

"""
*** AUTOGENERATED ***
Gives access to KRAKEN data and utility functions.
"""

__all__ = (
#     "app",
    "context",
#     "data",
#     "ops",
#     "path",
#     "props",
#     "types",
    "utils",
)


# internal kraken C module
from _kpy import (
#     app,
    context,
#     data,
#     msgbus,
#     props,
#     types,
)

# python modules
from . import (
#     ops,
#     path,
    utils,
)


def main():
    import sys

    # Possibly temp. addons path
    from os.path import join, dirname
    sys.path.extend([
        join(dirname(dirname(dirname(__file__))), "addons", "modules"),
        join(utils.user_resource('SCRIPTS'), "addons", "modules"),
    ])

    # fake module to allow:
    #   from kpy.types import Panel
    # sys.modules.update({
        # "kpy.app": app,
        # "kpy.app.handlers": app.handlers,
        # "kpy.app.translations": app.translations,
        # "kpy.types": types,
    # })

    # Initializes Python classes.
    # (good place to run a profiler or trace).
    # utils.load_scripts()


main()

del main
